{"version":3,"file":"main.bundle.js","mappings":"mBACA,I,ECCIA,EAAsB,KAGnB,SAASC,IACZ,IAAMC,EAAoBC,SAASC,eAAe,qBAalDC,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,MAdX,4IAgBbC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GACJ,IAAMC,EAAWD,EAAKA,KAAKE,OAC3BC,aAAaC,QAAQ,WAAYH,GAEjCd,EAAkBkB,UAAY,GAE9BJ,EAASK,SAAQ,SAACC,GAChB,IAAMC,EAAcpB,SAASqB,cAAc,OAC3CD,EAAYE,UAAUC,IAAI,WAAY,QACtCH,EAAYH,UAAY,uHAAHO,OAGUL,EAAQM,OAAM,8CAAAD,OAChBL,EAAQO,YAAW,mFAAAF,OACmBL,EAAQQ,QAAO,4LAKhFP,EAAYQ,uBAAuB,eAAe,GAAGC,iBAAiB,SAAS,WAalF,IAAsBC,IAZJX,EAAQY,GAa7BC,OAAOC,SAASC,KAAO,uBAAHV,OAA0BM,EAZxC,IACAV,EAAYQ,uBAAuB,cAAc,GAAGC,iBAAiB,SAAS,WAejF,IAAmCE,IAdJZ,EAAQY,GAe1ClC,EAAsBkC,EACO,IAAII,UAAUC,MAAMpC,SAASC,eAAe,kCACpDoC,MAhBf,IACFtC,EAAkBuC,YAAYlB,EAChC,GACF,IAAE,OACK,SAAAmB,GAAK,OAAIC,QAAQD,MAAM,2BAA4BA,EAAM,GACpE,CAewD,QAAxDE,EAAAzC,SAASC,eAAe,wCAAgC,IAAAwC,GAAxDA,EAA0DZ,iBAAiB,SAAS,WAChF,GAA4B,OAAxBhC,EAA8B,CAC9B,IAMM6C,EAAY,CAAEX,GAAIlC,GAExBK,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,MAXR,wGAWyBkC,UAAAA,MAEzCjC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GACAA,EAAK+B,OACPH,QAAQD,MAAM,6BAA8B3B,EAAK+B,SAEjDH,QAAQI,IAAI,qBAAsBhC,GAClCd,IACAD,EAAsB,KACOsC,UAAUC,MAAMS,YAC3C7C,SAASC,eAAe,kCAEL6C,OAEzB,IAAE,OACK,SAAAP,GAAK,OAAIC,QAAQD,MAAM,yBAA0BA,EAAM,GAClE,CACJ,IAGAvC,SAAS6B,iBAAiB,mBAAoB/B,E","sources":["webpack://task-manager/webpack/bootstrap","webpack://task-manager/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","\n// Variables globales\nlet tableroParaEliminar = null;\n\n// Función para cargar tableros desde la base de datos (GraphQL)\nexport function cargarTableros() {\n    const tablerosContainer = document.getElementById(\"tablerosContainer\");\n\n    const query = `\n      query {\n        panels {\n          id\n          titulo\n          descripcion\n          usuario\n        }\n      }\n    `;\n\n    fetch('/graphql', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query })\n    })\n    .then(res => res.json())\n    .then(data => {\n      const tableros = data.data.panels;\n      localStorage.setItem(\"tableros\", tableros);\n\n      tablerosContainer.innerHTML = \"\";\n\n      tableros.forEach((tablero) => {\n        const tableroCard = document.createElement(\"div\");\n        tableroCard.classList.add(\"col-md-4\", \"mb-4\");\n        tableroCard.innerHTML = `\n          <div class=\"card shadow-sm\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">${tablero.titulo}</h5>\n              <p class=\"card-text\">${tablero.descripcion}</p>\n              <p class=\"card-text\"><small class=\"text-muted\">Creado por: ${tablero.usuario}</small></p>\n              <button class=\"btn btn-primary\">Abrir Tablero</button>\n              <button class=\"btn btn-danger\">Eliminar</button>\n            </div>\n          </div>`;\n          tableroCard.getElementsByClassName(\"btn-primary\")[0].addEventListener(\"click\", function () {\n            abrirTablero(tablero.id);\n          });\n          tableroCard.getElementsByClassName(\"btn-danger\")[0].addEventListener(\"click\", function () {\n            abrirModalEliminarTablero(tablero.id);\n          });\n        tablerosContainer.appendChild(tableroCard);\n      });\n    })\n    .catch(error => console.error('Error cargando tableros:', error));\n}\n\n// Función para abrir tablero y redirigir a tareas.html\nexport function abrirTablero(tableroId) {\n    window.location.href = `tareas.html?tablero=${tableroId}`;\n}\n\n// Función para mostrar el modal de confirmación de eliminación de tablero\nexport function abrirModalEliminarTablero(id) {\n    tableroParaEliminar = id;\n    const modalEliminarTablero = new bootstrap.Modal(document.getElementById(\"modalConfirmarEliminarTablero\"));\n    modalEliminarTablero.show();\n}\n\n// Función para eliminar tablero desde la base de datos\ndocument.getElementById(\"botonConfirmarEliminarTablero\")?.addEventListener(\"click\", function () {\n    if (tableroParaEliminar !== null) {\n        const mutation = `\n          mutation DeletePanel($id: ID!) {\n            deletePanel(id: $id)\n          }\n        `;\n\n        const variables = { id: tableroParaEliminar };\n\n        fetch('/graphql', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ query: mutation, variables })\n        })\n        .then(res => res.json())\n        .then(data => {\n          if (data.errors) {\n            console.error('Error al eliminar tablero:', data.errors);\n          } else {\n            console.log('Tablero eliminado:', data);\n            cargarTableros();\n            tableroParaEliminar = null;\n            const modalEliminarTablero = bootstrap.Modal.getInstance(\n              document.getElementById(\"modalConfirmarEliminarTablero\")\n            );\n            modalEliminarTablero.hide();\n          }\n        })\n        .catch(error => console.error('Error en la solicitud:', error));\n    }\n});\n\n// Cargar tableros al cargar la página\ndocument.addEventListener(\"DOMContentLoaded\", cargarTableros);\n\nconst query = `\n  query {\n    panels {\n      id\n      titulo\n      descripcion\n      usuario\n    }\n  }\n`;\n\n// Mutación para crear un nuevo panel\n/*\nconst mutation = `\n  mutation CreatePanel($titulo: String!, $descripcion: String!, $usuario: String!) {\n    createPanel(titulo: $titulo, descripcion: $descripcion, usuario: $usuario) {\n      id\n      titulo\n      descripcion\n    }\n  }\n`;\n\nconst variables = {\n  titulo: \"Tablero de ejemplo\",\n  descripcion: \"Descripción del tablero de ejemplo\",\n  usuario: \"admin\"\n};\n\nfetch('/graphql', {\n  method: 'POST', \n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ query: mutation, variables })\n})\n.then((res) => res.json().catch(() => ({ error: 'Respuesta no es JSON válida' })))\n.then((data) => {\n  if (data.error) {\n    console.error('Error en la respuesta:', data.error);\n  } else if (data.errors) {\n    console.error('Errores de GraphQL:', data.errors);\n  } else {\n    console.log('Datos del panel creado:', data);\n  }\n})\n.catch((error) => {\n  console.error('Error en la solicitud:', error);\n});\n*/"],"names":["tableroParaEliminar","cargarTableros","tablerosContainer","document","getElementById","fetch","method","headers","body","JSON","stringify","query","then","res","json","data","tableros","panels","localStorage","setItem","innerHTML","forEach","tablero","tableroCard","createElement","classList","add","concat","titulo","descripcion","usuario","getElementsByClassName","addEventListener","tableroId","id","window","location","href","bootstrap","Modal","show","appendChild","error","console","_document$getElementB","variables","errors","log","getInstance","hide"],"sourceRoot":""}